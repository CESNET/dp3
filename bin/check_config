#!/usr/bin/env python3
"""
Load and check configuration from given directory, print any errors, and exit.
"""

import sys
import os
import argparse
import json

sys.path.insert(1, os.path.join(os.path.dirname(__file__), ".."))
from dp3.common.config import read_config_dir, load_attr_spec

# Parse arguments
parser = argparse.ArgumentParser(
    prog="check_config",
    description="Load configuration from given directory and check its validity. When configuration is OK, program "
    "exits immediately with status code 0, otherwise it prints error messages on stderr and exits with non-zero "
    "status.",
)
parser.add_argument(
    "config_dir",
    metavar="CONFIG_DIRECTORY",
    help="Path to a directory containing configuration files (e.g. /etc/my_app/config)",
)
parser.add_argument(
    "-v",
    "--verbose",
    action="store_true",
    help="Verbose mode - print parsed configuration",
    default=False,
)
args = parser.parse_args()

try:
    config = read_config_dir(args.config_dir, True)
    attr_spec = load_attr_spec(config.get("db_entities"))
except Exception as e:
    print(f"ERROR: {e}")
    sys.exit(1)

if args.verbose:
    # Print parsed config as JSON (print unserializable objects using str())
    print(json.dumps(config, indent=4, default=str))
sys.exit(0)
